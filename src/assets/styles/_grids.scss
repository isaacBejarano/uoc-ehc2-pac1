////
// GRID SYSTEM
////

// Functions
////

@function to-rem($num) {
  @return #{$num}rem;
}

@function grid-col-size($list-width, $cols, $remainder) {
  @return calc(calc($list-width / $cols) - $remainder);
}

// Mixins
////

@mixin grid-fit($gap, $list-width: 100%, $cols: 1, $remainder) {
  display: grid;
  gap: $gap; // extra space
  $col-size: grid-col-size($list-width, $cols, $remainder);
  grid-template-columns: repeat(auto-fit, minmax($col-size, 1fr));
}

// Classes
////

// It works for any list, or recursive tree like div nested in div, p in p, etc.
// Use it with elements without content restriction, i.e. elements able to
// contain other block/inline elements. e.g. div, section, article, span, etc.
// On the other hand, for example, it won't work with <p>.
// If the inmediate ancestor has more than 7rem padding;
// or you are increasing "$grid-list-cols-gap",
// you may need as well to increase "$grid-list-cols-margin" to adjust the "$remainder".
.grid-list-cols {
  $grid-list-cols-margin: to-rem(3);
  $grid-list-cols-gap: to-rem(1);
  $remainder: calc($grid-list-cols-margin + $grid-list-cols-gap);

  margin: $grid-list-cols-margin;

  @for $i from 1 through 6 {
    &-#{$i} {
      @include grid-fit($grid-list-cols-gap, $tablet-w, $i, $remainder);
    }
  }
}
